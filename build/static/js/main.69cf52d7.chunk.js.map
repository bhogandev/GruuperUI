{"version":3,"sources":["assets/imgs/GruuperFull.png","assets/imgs/lanphoman.jpg","registerServiceWorker.js","js/browserMethods.js","middleware/types.js","middleware/errors.js","middleware/Constants.js","middleware/BBVAPI.js","components/SearchBar.jsx","middleware/IconsStore.js","app/features/AuthSlice.js","middleware/UIDefaults.js","components/AppNav.jsx","components/Layout.jsx","components/CreateCommentForm.jsx","middleware/validation/UIValidator.js","components/Comment.jsx","components/ConfirmationModal.jsx","components/Post.jsx","middleware/routeHelpers.js","components/CreatePostForm.jsx","components/Timeline.jsx","components/GroupView.jsx","components/FriendsView.jsx","components/ActivityView.jsx","components/StoryView.jsx","app/features/UserSlice.jsx","pages/Home.jsx","components/SignUpForm.jsx","components/Spinner.jsx","components/LoginForm.jsx","pages/Landing.jsx","middleware/Auth.js","components/ProtectedRoute.jsx","pages/Profile.jsx","pages/ConfirmEmail.jsx","components/Message.jsx","components/ChatBox.jsx","components/ChatInput.jsx","components/ChatInvite.jsx","pages/Chat.jsx","app/store.js","App.jsx","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","determineDevice","userAgent","indexOf","document","documentMode","getParameterByName","name","url","href","replace","regex","RegExp","results","exec","decodeURIComponent","browser","tem","ua","M","test","version","appName","appVersion","splice","get_browser","SUCCESS","GruupChatTypes","CONNECTION_ESTABLISHED","CONNECTION_FAILED","RETRIEVE_USER_GROUPS","RECEIVE_CONNECTION_ID","INVITE_USER_SUCCESSFUL","INVITE_TO_GROUP","RETURN_EXCEPTION","RECEIVE_MESSAGE","SEND_PRIVATE_MESSAGE","SEND_CHAT_MESSAGE","CONNECTION_IDLE","CONNECTION_ID","PAYLOAD","TOKEN","QUERY_TYPES","DEFAULT_ERROR","APIBASE","login","e","p","a","Cookies","fetch","method","headers","toString","credentials","body","JSON","stringify","Email","Password","res","resAction","responseCode","payload","status","json","parse","result","defaultError","signUp","u","ref","dob","phone","UserName","RefCode","PhoneNumber","DOB","ok","validateRefreshToken","t","rt","cookies","AccessToken","RefreshToken","set","logout","get","remove","getUserTimeline","page","validateStatus","getUserPosts","username","getUserInfo","getFriendList","token","userId","response","Error","message","getProfile","query","range","val","Description","confirmUser","id","interactWithPostLikes","parentId","IsLiked","ParentId","LikeType","deletePost","postId","PostId","SearchBar","useState","searchBody","setSearchBody","items","setItems","isLoading","setIsLoading","useEffect","handleSearch","trim","length","Form","className","Control","type","placeholder","style","width","value","onChange","target","map","item","key","ProfileURL","house","faHouse","bell","faBell","compass","faCompass","group","faPeopleGroup","faMessage","heart","faHeart","fullHeart","farHeart","bookmark","faBookmark","loginUser","createAsyncThunk","rejectWithValue","email","password","logUserOut","initialState","refreshToken","loading","auth","createSlice","reducers","logIn","action","logOut","provideErrors","provideAuth","extraReducers","pending","fulfilled","ResponseErrors","Token","rejected","actions","PROFILE_DEFUALT","ProfileId","Picture","Followers","Following","Theme","AppNav","props","dispatch","useDispatch","userName","useSelector","user","defaultProfile","profile","handleLogout","profileLink","NavDropdown","Item","Navbar","expand","variant","navBG","Container","fluid","Brand","Nav","justify","Link","icon","size","title","src","height","borderRadius","marginRight","Divider","onClick","renderNav","Layout","children","isProtectedRoute","pathname","startsWith","CreateCommentForm","comment","prop","this","setState","btnDisabled","Body","FormGroup","Label","Input","setPropVal","Button","postComment","React","Component","Comment","CommentUserId","CreateDateTime","ConfirmationModal","Modal","isOpen","toggle","ModalBody","ModalFooter","OnClickFirst","OnClickSecond","Post","photos","videos","v","attachments","Attachments","postUpdate","likes","Likes","comments","Comments","CExt","coms","isOwner","showModal","profileURL","Username","com","Id","i","push","attachment","control","UpdatePost","openDeleteModal","counter","invertLike","openModal","GetTL","profilePic","to","moment","fromNow","renderDelete","DeletePost","Like","CreatePostForm","post","setPost","setPhotos","setVideos","errors","setErrors","setBtnDisable","Images","Videos","tlUpdate","Row","alt","Col","color","disabled","uploadPost","CustomInput","label","event","Array","from","files","multiple","accept","index","Timeline","rtoken","posts","setPosts","postPage","isInitialMount","useRef","useCallback","Cookie","jsonResponse","postList","CommentsExt","LikeStatus","current","getElementById","useMemo","textAlign","GroupView","lg","FriendsView","friendsList","setFriendsList","setLoading","setError","fetchData","friend","ActivityView","StoryView","retrieveUserData","userSlice","onlineStatus","organizationId","orgName","expPoints","rwdPoints","level","age","friends","setUserInfo","responseBody","UserID","Status","ExpPoints","member","Member","OrganizationId","OrgName","OnlineStatus","Age","Friends","RwdPoints","Profile","Home","fetchUserData","SignUpForm","Date","errorBox","forEach","x","innerHTML","reload","for","selected","SignUp","Spinner","timeout","LoginForm","localStorage","getItem","setEmail","setPassword","toggleButton","toggleLoading","Login","undefined","history","display","justifyContent","join","check","Landing","showLoginForm","setShowLoginForm","useHistory","currentYear","getFullYear","md","gruuperLogo","authenticated","cookie","refreshAuth","ProtectedRoute","component","rest","render","Auth","isAuthenticated","exact","infiniteScroll","innerHeight","documentElement","scrollTop","offsetHeight","newPage","GetPosts","updatetl","updateProfile","substring","ex","toUpperCase","storeUser","GetProfile","addEventListener","removeEventListener","DisplayName","Bio","bio","profileUpdate","displayName","ConfirmEmail","confirmationToken","valid","err","Code","errBag","Message","background","padding","time","ChatBox","chatMessages","renderedMessages","m","now","Math","random","ChatInput","setMessage","recipient","setRecipient","recipients","setRecipients","onSubmit","preventDefault","groupMembers","slice","formedMessage","GroupRecipients","sendMessage","alert","htmlFor","includes","removedRecipient","updatedRecipients","filter","onRemoveRecipient","ChatInvite","inviteUser","setInviteUser","Chat","connection","setConnection","setChatMessages","selectedConversation","setSelectedConversation","currGroup","setCurrGroup","latestChatMessages","hubUrl","API_BASE_URL","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","startConnection","start","withCredentials","TYPES","on","connectionId","groupRequestPayload","conId","invoke","groups","setItem","groupName","exception","updatedChatMessages","groupId","toUser","messagePayload","SEND_MESSAGE_FAILED","userEmail","invitePayload","sender","INVITE_USER","INVITE_USER_FAILED","Object","entries","storedMessages","retrievedMessages","conversation","split","groupUID","loadConversation","store","configureStore","reducer","AuthSlice","UserSlice","App","path","baseUrl","getElementsByTagName","getAttribute","rootElement","ReactDOM","basename","URL","process","origin","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69cf52d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GruuperFull.4398eb54.png\";","module.exports = __webpack_public_path__ + \"static/media/lanphoman.b4bff2f4.jpg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function determineDevice()\n{\n    if((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 ) \n    {\n        return 'Opera';\n    }\n    else if(navigator.userAgent.indexOf(\"Chrome\") != -1 )\n    {\n        return 'Chrome';\n    }\n    else if(navigator.userAgent.indexOf(\"Safari\") != -1)\n    {\n        return 'Safari';\n    }\n    else if(navigator.userAgent.indexOf(\"Firefox\") != -1 ) \n    {\n         return 'Firefox';\n    }\n    else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document.documentMode == true )) //IF IE > 10\n    {\n      return 'IE'; \n    }  \n    else \n    {\n       return 'unknown';\n    }\n}\n\nfunction get_browser() {\n    var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || []; \n    if(/trident/i.test(M[1])){\n        tem=/\\brv[ :]+(\\d+)/g.exec(ua) || []; \n        return {name:'IE',version:(tem[1]||'')};\n        }   \n    if(M[1]==='Chrome'){\n        tem=ua.match(/\\bOPR|Edge\\/(\\d+)/)\n        if(tem!=null)   {return {name:'Opera', version:tem[1]};}\n        }   \n    M=M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n    if((tem=ua.match(/version\\/(\\d+)/i))!=null) {M.splice(1,1,tem[1]);}\n    return {\n      name: M[0],\n      version: M[1]\n    };\n }\n\nfunction getParameterByName(name, url = window.location.href) {\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)', 'i'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' ')); \n} \n\nvar browser=get_browser();\n\nfunction infiniteScroll (GetTL) {\n    // End of the document reached?\n    if (window.innerHeight + document.documentElement.scrollTop\n    === document.documentElement.offsetHeight){\n     \n       let newPage = this.state.page;\n       newPage++;\n        this.setState({\n             page: newPage\n        });\n       GetTL();\n       }\n}\n\nexport { determineDevice, getParameterByName , infiniteScroll ,browser }","//API RESPONSE STATUS\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nexport const CONFLICT = \"CONFLICT\";\n\n//API RESPONSE KEYS\nexport const RESPONSE_BODY = \"responseBody\";\nexport const RESPONSE_MESSAGE = \"responseMessage\";\nexport const RESPONSE_ERRORS = \"responseErrors\";\n\n//USER OBJECT KEYS\nexport const USERNAME_KEY = \"Username\";\n\n//GRUUP CHAT CONNECTION EVENTS\nexport const GruupChatTypes = {\n    CONNECTION_ESTABLISHED: \"Connected!\",\n    CONNECTION_FAILED: \"Connection failed: \",\n    RETRIEVE_USER_GROUPS: \"RetrieveUserGroups\",\n    RECEIVE_CONNECTION_ID: \"RecieveConnID\",\n    INVITE_USER_SUCCESSFUL: \"InviteUserSuccessful\",\n    INVITE_TO_GROUP: \"InviteToGroup\",\n    RETURN_EXCEPTION: \"ReturnException\",\n    RECEIVE_MESSAGE: \"ReceiveMessage\",\n    SEND_PRIVATE_MESSAGE: \"SendPrivateMessage\",\n    SEND_CHAT_MESSAGE: \"SendMessage\",\n    CONNECTION_IDLE: \"No connection to server yet.\",\n    CONNECTION_ID: \"ConnectionId\"\n  };\n  \n\n//REDUX REDUCER KEYS\nexport const PAYLOAD = \"payload\"; \n\n//API STATUS CODES\nexport const CONFLICT_CODE = 409;\nexport const SUCCESS_CODE = 200;\nexport const BADREQUEST_CODE = 500;\n\n//UI TYPES\nexport const LIKE = \"Like\";\nexport const UNLIKE = \"Unlike\";\nexport const PHOTO = \"Photo\";\nexport const VIDEO = \"Video\";\nexport const LINK = \"Link\";\n\n//COOKIE TYPES\nexport const TOKEN = 'token';\nexport const REFRESH_TOKEN = 'refreshToken';\nexport const USER_TOKEN = 'user';\nexport const CONNECTION_ID = 'connID';\nexport const USERNAME = 'UserName';\nexport const PROFILE = 'Profile';\nexport const PICTURE = 'Picture';\n\n//UI OBJECT TYPES\nexport const QUERY_TYPES = {\n    \"ALL\": \"ALL\"\n}\n\n//GRUUP CHAT OBJECTS\nexport const GROUP_MODIFICATION_TYPES = {\n    \"INVITE\": \"INVITE\"\n}\n\n//CUI ENGINE TYPES\nexport const CUI_ENGINE_TYPES = {\n    \"EVENTS\": \"EVENTS\",\n    \"VLINE\": \"VLINE\",\n    \"ISTREAM\": \"ISTREAM\",\n    \"TLINE\":\"TLINE\"\n}","//DEFAULT ERRORS\nexport const DEFAULT_ERROR = {\n    \"Description\": \"An Unexpected Error Has Occured, Please try again!\"\n};\n\n\n//UI ERRORS\nexport const NO_VALUE_PROVIDED = {\n    \"Description\": \"One or more fields on the form are missing a value. Please fix and try again!\"\n};","const APIBASE =  \"http://3.85.55.52/api/\";\nconst CHATBASE = \"http://3.85.55.52/\"\n  \n\nexport { APIBASE, CHATBASE };\n","import axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport {determineDevice, browser} from '../js/browserMethods';\nimport {SUCCESS, FAILURE, CONFLICT, CONFLICT_CODE, RESPONSE_ERRORS, SUCCESS_CODE, BADREQUEST_CODE} from './types';\nimport {DEFAULT_ERROR} from './errors';\nimport {APIBASE} from './Constants';\n\n\n\n\n    //Summary - Log in user to application\n    async function login(e, p) {\n        const cookies = new Cookies();\n\n        try {\n            let res = await (await fetch(APIBASE + \"Login/LoginUser\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify({\n                    Email: e,\n                    Password: p\n                })\n            }))\n\n            //Verify fetch completed successfully\n\n            var resAction = {\n                responseCode: null,\n                payload: null\n            };\n\n            if (res && res.status == SUCCESS_CODE) {\n                var result = await JSON.parse(await res.json());\n                \n                resAction.responseCode = SUCCESS_CODE;\n                resAction.payload = result;\n\n                //Redirect to app dashboard\n                return resAction;\n\n            } else if (res && res.status == CONFLICT_CODE) {\n                var result = await JSON.parse(await res.json());\n\n                //find a way to return errrors and loading state\n                //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n                resAction.responseCode = CONFLICT_CODE;\n                resAction.payload = result;\n\n                return resAction;\n            } else {\n                //find a way to return errrors and loading state\n                \n                resAction.responseCode = BADREQUEST_CODE;\n                resAction.payload = DEFAULT_ERROR;\n\n                //this.setState({ errors: defaultError, loading: false });\n                return resAction;\n            }\n        } catch (exception) {\n            //find a way to return errrors and loading state\n            //console.log(exception);\n            var defaultError = [{\n                \"Description\": exception\n            }]\n            //this.setState({ errors: defaultError, loading: false });\n\n            resAction.responseCode = BADREQUEST_CODE;\n            resAction.payload = defaultError;\n\n            return defaultError;\n        }\n\n    }\n\n    async function signUp(e, u, p, ref, dob, phone){\n        const cookies = new Cookies();\n\n        try {\n\n            let res = await (await fetch(APIBASE + \"Registration/CreateUser\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify({\n                    UserName: u,\n                    Password: p,\n                    Email: e,\n                    RefCode: ref,\n                    PhoneNumber: phone,\n                    DOB: dob\n                })\n            }))\n\n            //Verify fetch completed successfully\n\n            if (res && res.ok) {\n\n                //Redirect to confirm email page dashboard\n                return SUCCESS;\n\n            } else if ( res != null &&  res.status == CONFLICT_CODE) {\n                var result = await res.json();\n\n                //find a way to return errrors and loading state\n                //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n                await console.log(await result[RESPONSE_ERRORS]);\n                await console.log(await typeof(result[RESPONSE_ERRORS]));\n                return await result[RESPONSE_ERRORS];\n            } else {\n                //find a way to return errrors and loading state\n                var defaultError = [{\n                    DEFAULT_ERROR\n                }]\n\n                //this.setState({ errors: defaultError, loading: false });\n                return defaultError;\n            }\n        } catch (exception) {\n            //find a way to return errrors and loading state\n            //console.log(exception);\n            var defaultError = [{\n                \"Description\": exception\n            }]\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n\n    }\n\n    //Summary - Validate the refresh token so user can continue action\n    async function validateRefreshToken(t, rt) {\n        const cookies = new Cookies();\n\n        try {\n\n            let res = await (await fetch(APIBASE + \"Login/RefreshToken\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + t,\n                    'Content-Type': 'application/json',\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify({\n                   AccessToken: t,\n                   RefreshToken: rt\n                })\n            }))\n\n            //Verify fetch completed successfully\n\n            if (res && res.ok) {\n                var result = await JSON.parse(await res.json());\n\n                //console.log(result);\n\n                //Set JWT cookie in browser cookie storage\n                cookies.set('token', (result[\"AccessToken\"]));\n                //Set Refresh cookie in browser cookie storage\n                cookies.set('refreshToken', result['RefreshTokens'][0]['Token']);\n                cookies.set('user', result);\n\n                //Redirect to app dashboard\n                return true;\n\n            } else if (res && res.status == CONFLICT_CODE) {\n                var result = await JSON.parse(await res.json());\n\n                //find a way to return errrors and loading state\n                //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n                return result[\"ResponseErrors\"];\n            } else {\n                //find a way to return errrors and loading state\n                var defaultError = [{\n                    DEFAULT_ERROR\n                }]\n\n                //this.setState({ errors: defaultError, loading: false });\n                return defaultError;\n            }\n        } catch (exception) {\n            //find a way to return errrors and loading state\n            //console.log(exception);\n            var defaultError = [{\n                \"Description\": exception\n            }]\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n    }\n\n    //Summary - Log out user from application\n    async function logout(t) {\n        const cookies = new Cookies();\n        try {\n            let res = await (await fetch(APIBASE + \"Logout/LogoutUser\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString(),\n                    'Authorization': `Bearer ${cookies.get('token')}`,\n                    'Token': t\n                },\n                credentials: 'same-origin'\n            }));\n        \n            // Verify fetch completed successfully\n        \n            if (res && res.status === SUCCESS_CODE) {\n                // Remove cookies and redirect to login page\n                cookies.remove('token');\n                cookies.remove('refreshToken');\n                cookies.remove('user');\n                window.location.href = '/';\n            } else {\n                console.log('Error: Logout failed');\n            }\n        } catch (exception) {\n            console.log(exception);\n        }\n        \n    }\n//TIMELINE CALLS\n\n    //Summary - Get users timemline\n    async function getUserTimeline(t, rt, page) {\n\n        const cookies = new Cookies();\n        var resOk = false;\n\n        try {\n            let res = await (await fetch(APIBASE + \"Post/GetTimeline?page=\" + page, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + t,\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'RefreshToken': rt,\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                validateStatus: () => true,\n                credentials: 'same-origin'\n            }));\n\n            //await console.log(await res.json());\n\n            if (await res != null && await res.ok) {\n                \n                var result = await res.json();\n                return result;\n\n            } else if (res && res.status == CONFLICT_CODE) {\n            var result = await res;\n\n            //find a way to return errrors and loading state\n            //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n            return await res;\n            } else {\n            //find a way to return errrors and loading state\n            var defaultError = [{\n                DEFAULT_ERROR\n            }]\n\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n\n        } catch (ex) {\n\n        }\n    }\n\n    //Summary - Get a user's posts to populate timeline or profile\n    async function getUserPosts(t, rt, page, username){\n        const cookies = new Cookies();\n        var resOk = false;\n\n        try {\n            let res = await (await fetch(APIBASE + \"Post/GetUserPosts?username=\" + username + \"&page=\" + page, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + cookies.get('token'),\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'RefreshToken': rt,\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                validateStatus: () => true,\n                credentials: 'same-origin'\n            }));\n\n            //await console.log(await res.json());\n\n            if (await res != null && await res.ok) {\n                \n                var result = await res.json();\n                //console.log(JSON.parse(await result));\n                return JSON.parse(await result);\n\n            } else if (res && res.status == CONFLICT_CODE) {\n            var result = await res;\n\n            //find a way to return errrors and loading state\n            //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n            return await res;\n            } else {\n            //find a way to return errrors and loading state\n            var defaultError = [{\n                DEFAULT_ERROR\n            }]\n\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n\n        } catch (ex) {\n\n        }\n    }\n\n    async function getUserInfo(t, rt)\n    {\n        const cookies = new Cookies();\n        var resOk = false;\n        var resAction = {\n            responseCode: null,\n            payload: null\n        };\n\n        try {\n            let res = await (await fetch(APIBASE + \"User/GetUserInfo\", {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + t,\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'RefreshToken': rt,\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                validateStatus: () => true,\n                credentials: 'same-origin'\n            }));\n\n            if (await res != null && await res.ok) {\n\n                var result = await res.json();\n\n                resAction.responseCode = SUCCESS_CODE;\n                resAction.payload = result;\n                \n                return await resAction;\n\n            } else if (res && res.status == CONFLICT_CODE) {\n            var result = await res;\n\n            //find a way to return errrors and loading state\n            //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n            return await res;\n            }\n             else if (res && res.status == BADREQUEST_CODE) {\n            var result = await res;\n\n            //find a way to return errrors and loading state\n            //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n            return await res;\n            }\n             else {\n            //find a way to return errrors and loading state\n            var defaultError = [\n                DEFAULT_ERROR\n            ]\n\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n\n        } catch (ex) {\n\n        }\n    }\n\n    async function getFriendList(token, userId) {\n        const cookies = new Cookies();\n        const headers = {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Token': token,\n            'Device': 'Web',\n            'Identity': determineDevice(),\n            'Version': browser.version.toString()\n        };\n    \n        try {\n            const response = await fetch(`${APIBASE}User/GetFriends?username=${userId}`, {\n                method: 'GET',\n                headers: headers,\n                validateStatus: () => true,\n                credentials: 'same-origin'\n            });\n    \n            if (response.ok) {\n                const result = await response.json();\n                return result;\n            } else {\n                const error = await response.json();\n                throw new Error(error.message).message;\n            }\n        } catch (error) {\n            throw new Error('An error occurred while retrieving the friend list.').message;\n        }\n    }\n    \n\n    //Summary - Get a user's profile information to render profile path\n    async function getProfile(t, rt, username){\n        \n        const cookies = new Cookies();\n        var resOk = false;\n\n        try {\n            let res = await (await fetch(APIBASE + \"User/GetProfile?username=\" + username, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + cookies.get('token'),\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'RefreshToken': rt,\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                validateStatus: () => true,\n                credentials: 'same-origin'\n            }));\n\n            //await console.log(await res.json());\n\n            if (await res != null && await res.ok) {\n                \n                var result = await res.json();\n                //console.log(JSON.parse(await result));\n                return JSON.parse(await result);\n\n            } else if (res && res.status == CONFLICT_CODE) {\n            var result = await res;\n\n            //find a way to return errrors and loading state\n            //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n            return await res;\n            } else {\n            //find a way to return errrors and loading state\n            var defaultError = [\n                DEFAULT_ERROR\n            ]\n\n            //this.setState({ errors: defaultError, loading: false });\n            return defaultError;\n        }\n\n        } catch (ex) {\n\n        }\n    }\n\n    //Summary - Query/Search Gruuper Site. Different filters can be applied to narrow search results\n    async function query(range, val) {\n        const cookies = new Cookies();\n\n        try {\n            let res = await (await fetch(APIBASE + \"User/Query?query=\" + val + \"&qFilter=\" + range, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + cookies.get('token'),\n                    'Content-Type': 'application/json',\n                    'Token': cookies.get('token'),\n                    'qFilter': range,\n                    'Query': val,\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                credentials: 'same-origin'\n            }));\n\n            if (res && res.ok) {\n\n                var result = await res.json();\n                return JSON.parse(JSON.parse(result));\n\n            } else if (res && res.status == CONFLICT_CODE) {\n                var result = await JSON.parse(await res.json());\n\n                //find a way to return errrors and loading state\n                //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n\n                throw new Error(\"an error occured\");\n            } else {\n                //find a way to return errrors and loading state\n                var defaultError = [{\n                    DEFAULT_ERROR\n                }]\n\n                //this.setState({ errors: defaultError, loading: false });\n                throw new Error(DEFAULT_ERROR.Description);\n            }\n\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    //Summary - Send request to confirm user via email confirmation\n    async function confirmUser(id, token){\n        const cookies = new Cookies();\n\n        try {\n            let res = await (await fetch(APIBASE + \"Registration/ConfirmEmail?id=\" + id + \"&token=\" + token, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Device': \"Web\",\n                    'Identity': determineDevice(),\n                    'Version': browser.version.toString()\n                },\n                credentials: 'same-origin'\n            }));\n\n            if (res && res.ok) {\n\n                return SUCCESS;\n\n            } else if (res && res.status == CONFLICT_CODE) {\n                var result = await JSON.parse(await res.json());\n\n                //find a way to return errrors and loading state\n                //this.setState({ errors: result[\"ResponseErrors\"], loading: false });\n                //console.log(await result[0]);\n                return result;\n            } else {\n                //find a way to return errrors and loading state\n                var defaultError = [{\n                    DEFAULT_ERROR\n                }]\n\n                //this.setState({ errors: defaultError, loading: false });\n                return defaultError;\n            }\n\n        } catch (ex) {\n\n        }\n    }\n\n//POST API CALLS\n\n    //Summary - Interact with user post likes (like or unlike post)\n    async function interactWithPostLikes(t, parentId, IsLiked)\n    {\n        const cookies = new Cookies();\n        \n        try {\n\n            let res = await (await fetch(APIBASE + \"Post/Interact\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + cookies.get('token'),\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'IntType': IsLiked\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify({\n                    ParentId: parentId,\n                    LikeType: IsLiked\n                })\n            }))\n\n            //Verify fetch completed successfully\n            var result = await JSON.parse(await res.json());\n            if (res && res.ok) {\n                return SUCCESS\n            } else if (res && res.status == CONFLICT_CODE) {\n                return CONFLICT\n            } else {\n                return FAILURE;\n            }\n        } catch (exception) {\n            //Need to return failure result here\n            return FAILURE;\n        }\n\n    }\n\n    //Summary - Delete own post\n    async function deletePost(t, rt, postId){\n        try {\n\n            let res = await (await fetch(APIBASE + \"Post/DeletePost\", {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization':'Bearer ' + t,\n                    'Content-Type': 'application/json',\n                    'Token': t,\n                    'RefreshToken': rt\n                },\n                credentials: 'same-origin',\n                body: JSON.stringify({\n                    PostId: postId,\n                })\n            }))\n\n            //Verify fetch completed successfully\n\n            if (res && res.ok) {\n                return SUCCESS;\n            } else if (res && res.status == CONFLICT_CODE) {\n                //Handle Error\n                return FAILURE;\n            } else {\n                //General Error Message\n            }\n        } catch (exception) {\n            //Do something with exception\n            //console.log(exception);\n        }\n    }\n\nexport { login, signUp, validateRefreshToken, logout, getUserTimeline, getUserPosts, getUserInfo, getProfile, query, confirmUser, interactWithPostLikes, deletePost, getFriendList };","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport BBVAPI, { query } from '../middleware/BBVAPI';\nimport { QUERY_TYPES } from '../middleware/types';\n\nfunction SearchBar() {\n  const [searchBody, setSearchBody] = useState('');\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setIsLoading(false);\n    };\n  }, []);\n\n  const handleSearch = async (val) => {\n    val = val.trim();\n    setSearchBody(val);\n\n    if (val.length > 2) {\n      setIsLoading(true);\n      try {\n        const result = await query(QUERY_TYPES.ALL, val);\n        setItems(result);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setItems([]);\n    }\n  };\n\n  const renderForm = () => {\n    if(items.length > 0)\n    {\n        return (\n            <Form className=\"AutoCompleteText\">\n            <Form.Control\n              type=\"text\"\n              className=\"nav-search\"\n              placeholder=\"Search...\"\n              style={{ width: '100%' }}\n              value={searchBody}\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n            {isLoading && <p>Loading...</p>}\n            {items.length > 0 && (\n              <ul>\n                {items.map((item) => (\n                  <li key={item.UserName}>\n                    <a href={item.ProfileURL}>{item.UserName}</a>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </Form>\n        )\n    } else {\n        return (\n            <Form className=\"AutoCompleteText\">\n            <Form.Control\n              type=\"text\"\n              className=\"nav-search\"\n              placeholder=\"Search...\"\n              style={{ width: '100%' }}\n              value={searchBody}\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </Form>\n        )\n    }\n  }\n\n  return (\n   renderForm()\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faHouse, faBell, faCompass, faPeopleGroup, faMessage, faHeart, faBookmark} from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\n\n\n\nconst house = faHouse;\nconst bell = faBell;\nconst compass = faCompass;\nconst group = faPeopleGroup;\nconst message = faMessage;\nconst heart = faHeart;\nconst fullHeart = farHeart;\nconst bookmark = faBookmark;\n\nexport { house, bell, compass, group, message, heart, fullHeart, bookmark}\n\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { useHistory } from 'react-router';\nimport Cookies from 'universal-cookie';\nimport { login, logout } from '../../middleware/BBVAPI';\nimport { DEFAULT_ERROR } from '../../middleware/errors';\nimport { BADREQUEST_CODE, CONFLICT_CODE, PAYLOAD, REFRESH_TOKEN, RESPONSE_ERRORS, SUCCESS_CODE, TOKEN } from '../../middleware/types';\n\nconst cookies = new Cookies();\n\nexport const loginUser = createAsyncThunk(\n  \"auth/login\",\n  async (payload, { rejectWithValue }) => {\n    try {\n      // Make request to authentication API here\n      const response = login(payload.email, payload.password);\n      // Return JSON object containing token and refresh token\n      return response\n    } catch (error) {\n      // Handle any errors that may occur during the request\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const logUserOut = createAsyncThunk(\n    \"auth/logout\",\n    async (payload ,{rejectWithValue}) => {\n        try {\n            const response = await logout(payload.token);\n\n            return response\n        }catch(error){\n\n            return rejectWithValue(error);\n        }\n    }\n);\n\nconst initialState = { \n    token: cookies.get(TOKEN),\n    refreshToken: cookies.get(REFRESH_TOKEN),\n    loading: false,\n    error: null\n }\n\nconst auth = createSlice ({\n    name: 'auth',\n    initialState\n    ,\n    reducers: {\n        logIn: (state, action) => {\n            let cookies = new Cookies();\n            state.token = cookies.get(TOKEN);\n            state.refreshToken = cookies.get(REFRESH_TOKEN);\n            \n        },\n        logOut: (state, action) => {\n            state.token = null;\n            state.refreshToken = null;\n\n            let cookies = new Cookies();\n            cookies.remove(TOKEN);\n            cookies.remove(REFRESH_TOKEN);\n        },\n        provideErrors: (state) => {\n            return state.error;\n        },\n        provideAuth: (state) => {\n            let cookies = new Cookies();\n            state.token = cookies.get(TOKEN);\n            state.refreshToken = cookies.get(REFRESH_TOKEN);\n            return ({\"token\": state.token,\n        \"refreshToken\": state.refreshToken}\n            )\n        }\n    },\n    extraReducers: {\n        [loginUser.pending]: (state,action) => {\n            state.loading = true;\n        },\n        [loginUser.fulfilled]: (state,action)=>{\n            state.loading = false;\n            let res = JSON.stringify(action.payload[PAYLOAD].ResponseErrors);\n\n            switch (action.payload.responseCode) {\n                case SUCCESS_CODE:\n                    state.token = action.payload[PAYLOAD].Token;\n                    state.refreshToken = action.payload[PAYLOAD].RefreshToken;\n                    state.error = null;\n\n                    let cookies = new Cookies();\n                    cookies.set(TOKEN, action.payload[PAYLOAD].Token);\n                    cookies.set(REFRESH_TOKEN, action.payload[PAYLOAD].RefreshToken);\n                    break;\n                \n                case CONFLICT_CODE:          \n                    state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                    console.log(state.error);\n                    break;\n                \n                case BADREQUEST_CODE:\n                    state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                    console.log(...action.payload[PAYLOAD]);\n                    break;\n                \n                default:\n                    console.log(action);\n                    state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                    console.log(state.error);\n                    break;\n            }\n        },\n    [loginUser.rejected]: (state, action) => {\n      // Update the state with the error from the action\n      state.error = action.payload;\n    },\n    [logUserOut.pending]: (state,action) => {\n        state.loading = true;\n    },\n    [logUserOut.fulfilled]: (state,action)=>{\n        state.loading = false;\n        let res = JSON.stringify(action.payload[PAYLOAD].ResponseErrors);\n\n        switch (action.payload.responseCode) {\n            case SUCCESS_CODE:\n                state.token = null;\n                state.refreshToken = null;\n                state.error = null;\n\n                let cookies = new Cookies();\n                cookies.remove(TOKEN);\n                cookies.remove(REFRESH_TOKEN);\n                break;\n            \n            case CONFLICT_CODE:          \n                state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                cookies.remove(TOKEN);\n                cookies.remove(REFRESH_TOKEN);\n\n                console.log(state.error);\n                break;\n            \n            case BADREQUEST_CODE:\n                state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                cookies.remove(TOKEN);\n                cookies.remove(REFRESH_TOKEN);\n                break;\n            \n            default:\n                console.log(action);\n                state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                console.log(state.error);\n                cookies.remove(TOKEN);\n                cookies.remove(REFRESH_TOKEN);\n                break;\n        }\n    },\n[logUserOut.rejected]: (state, action) => {\n  // Update the state with the error from the action\n  state.error = action.payload;\n}}\n});\n\n\n\nexport const { logIn, logOut, provideErrors, provideAuth } = auth.actions;\n\nexport default auth.reducer;\n\nexport const SelectCurrentToken = (state) => state.Auth.token;\n\nexport const provideUserToken = (state) =>   {\n   console.log(state);\n    return ({ \"token\": state.auth.token,\n    \"refreshToken\": state.auth.refreshToken\n})\n}\n\n//export const provideUserRefreshToken = (state) => state.refreshToken;","export const PROFILE_DEFUALT = {\n    ProfileId: '',\n    Picture: '',\n    Description: '',\n    Followers: 0,\n    Following: 0,\n    Theme: 'DEFAULT'\n};\n\n","import React from 'react';\nimport { Nav, Navbar, NavDropdown, Button, Container, Form, Col, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SearchBar from './SearchBar';\nimport { bell, bookmark, compass, group, heart, house, message } from '../middleware/IconsStore';\nimport { logOut, logUserOut } from '../app/features/AuthSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cookies from 'universal-cookie';\nimport { TOKEN } from '../middleware/types';\nimport { PROFILE_DEFUALT } from '../middleware/UIDefaults';\n\nconst AppNav = (props) => {\n  const dispatch = useDispatch();\n  const userName = useSelector(state => state.user.username);\n\n  const defaultProfile = PROFILE_DEFUALT;\n  const profile = useSelector(state => state.user.profile);\n\n  async function handleLogout(){\n\n    let cookies = new Cookies();\n\n    const res = await dispatch(logUserOut({token: cookies.get(TOKEN)}));\n  }\n\n  function renderNav(){\n    if(profile != null){\n      const isCurrentUser = profile.UserName === userName;\n      const profileLink = isCurrentUser ? null : <NavDropdown.Item href={\"/profile/\" + userName}>{userName}</NavDropdown.Item>;\n  \n      return (\n        <Navbar className=\"nav\" expand=\"md\" variant={props.navBG}>\n          <Container fluid>\n            <Navbar.Brand href='/home'>\n              Gruuper\n            </Navbar.Brand>\n            <Nav className=\"me-auto\" justify>\n              <Nav.Item className='nav-icon'>\n                <Nav.Link href='/home'>\n                  <FontAwesomeIcon icon={house} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/explore\">\n                  <FontAwesomeIcon icon={compass} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/gruups\">\n                  <FontAwesomeIcon icon={group} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/Messenger\">\n                  <FontAwesomeIcon icon={message} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <SearchBar />\n              </Nav.Item>\n            </Nav>\n            <Nav>\n              <Nav.Item>\n                <FontAwesomeIcon icon={bookmark} size=\"xl\" />\n              </Nav.Item>\n              <Nav.Item>\n                <FontAwesomeIcon icon={bell} size=\"xl\" />\n              </Nav.Item>\n              <NavDropdown title={<img className='u_nav_profile_img' src={profile.Picture} style={{ height: '2.5rem', width: '2.5rem', borderRadius: '50%', marginRight: '1rem' }} />} id=\"basic-nav-dropdown\">\n                {profileLink}\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={handleLogout}>Log out</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      )\n    }else {\n      return (\n        <Navbar className=\"nav\" expand=\"md\" variant={props.navBG}>\n          <Container fluid>\n            <Navbar.Brand href='/home'>\n              Gruuper\n            </Navbar.Brand>\n            <Nav className=\"me-auto\" justify>\n              <Nav.Item className='nav-icon'>\n                <Nav.Link href='/home'>\n                  <FontAwesomeIcon icon={house} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/explore\">\n                  <FontAwesomeIcon icon={compass} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/gruups\">\n                  <FontAwesomeIcon icon={group} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/Messenger\">\n                  <FontAwesomeIcon icon={message} size=\"xl\" />\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <SearchBar />\n              </Nav.Item>\n            </Nav>\n            <Nav>\n              <Nav.Item>\n                <FontAwesomeIcon icon={bookmark} size=\"xl\" />\n              </Nav.Item>\n              <Nav.Item>\n                <FontAwesomeIcon icon={bell} size=\"xl\" />\n              </Nav.Item>\n              <NavDropdown title={<img className='u_nav_profile_img' src={defaultProfile.Picture} style={{ height: '2.5rem', width: '2.5rem', borderRadius: '50%', marginRight: '1rem' }} />} id=\"basic-nav-dropdown\">\n                <NavDropdown.Item onClick={handleLogout}>Log out</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      );\n    }\n  }\n\n  return (\n    renderNav()\n  );\n}\n\nexport default AppNav;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AppNav from './AppNav';\nimport { PROFILE_DEFUALT } from '../middleware/UIDefaults';\n\nconst Layout = ({ children }) => {\n  const isProtectedRoute =\n    window.location.pathname.startsWith('/home') ||\n    window.location.pathname.startsWith('/profile') ||\n    window.location.pathname.startsWith('/Messenger');\n\n  const { userName, profile } = useSelector((state) => state.user);\n\n  return (\n    <div>\n      {isProtectedRoute && (\n        <AppNav userName={userName} profile={profile ? profile : PROFILE_DEFUALT} />\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport Cookies from 'universal-cookie';\nimport { APIBASE } from '../middleware/Constants';\nimport { CONFLICT_CODE } from '../middleware/types';\nimport { fieldIsNotEmpty } from '../middleware/validation/UIValidator';\n\nclass CreateCommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            comment: ''\n        }\n    }\n\n    componentDidMount() {}\n    componentDidUpdate() {}\n\n    setPropVal(prop, val) {\n        //val = val.trim();\n\n        this.setState({\n            [prop]: val\n        });\n    }\n\n\n    /*Function to post comment */\n   async postComment() {\n       if(fieldIsNotEmpty(this.state.comment))\n       {\n       const cookies = new Cookies();\n\n       this.setState({ btnDisabled: true });\n\n       try {\n\n           let res = await (await fetch(APIBASE + \"Post/Interact\", {\n               method: 'post',\n               headers: {\n                   'Accept': 'application/json',\n                   'Authorization':'Bearer ' + cookies.get('token'),\n                   'Content-Type': 'application/json',\n                   'Token': cookies.get('token'),\n                   'IntType': \"Comment\"\n               },\n               credentials: 'same-origin',\n               body: JSON.stringify({\n                   ParentId: this.props.PostId,\n                   Body: this.state.comment\n               })\n           }))\n\n           //Verify fetch completed successfully\n\n           if (res && res.ok) {\n           } else if (res && res.status == CONFLICT_CODE) {\n               var result = await JSON.parse(await res.json());\n               /*\n               if (IsLiked == \"Like\") {\n                   counter--;\n               } else {\n                   counter++;\n               }\n               this.setState({ likes: counter });\n               */\n           } else {\n           }\n       } catch (exception) {\n           /*\n           if (IsLiked == \"Like\") {\n               counter--;\n           } else {\n               counter++;\n           }\n           this.setState({ likes: counter });\n           */\n           //console.log(exception);\n       }\n    } else {\n        //bubble up error\n    }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <FormGroup>\n                        <Label />\n                        <Input type=\"text\" name=\"comment\" id=\"comment\" placeholder=\"add comment\" value={this.state.comment ? this.state.comment : ''} onChange={(val) => this.setPropVal(\"comment\", val.target.value)} />\n                    </FormGroup>\n                    <Button onClick={() => this.postComment()}>Add Comment</Button>\n                </Form>\n            </div>\n            )\n    }\n}\n\nexport default CreateCommentForm;","//SUMMARY - Verify the field passed is not empty\nexport function fieldIsNotEmpty(field){\n    return field === '' ? false : true;\n}\n\n//SUMMARY - Verify the field passed does not go over the provided character limit\nexport function fieldHasTooManyCharacters(field, charLimit){\n    return field.length > charLimit ? true : false;\n}\n\n//SUMMARY - Verify the field passed does not contain any of the listed special characters \nexport function fieldContainsSpecialCharacters(field){\n    const specialChars = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return specialChars.test(field);\n}","import React from 'react';\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {}\n\n    componentDidUpdate() {}\n\n    render() {\n        return (\n            <div>\n                <p><b>{this.props.CommentUserId}</b></p>\n                <p><b>{this.props.CreateDateTime}</b></p>\n                <p>{this.props.Body}</p>\n            </div>\n            )\n    }\n}\n\nexport default Comment;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ConfirmationModal = props => {\n    //const [showModal, openModal] = useState(props.isOpen);\n\n    function openModal(prop) {\n        prop = !prop;\n    }\n\n    return (\n        <Modal isOpen={props.isOpen} toggle={() => openModal(!props.isOpen)}>\n            <ModalBody>\n                {props.Body}\n             </ModalBody>\n            <ModalFooter>\n                <Button onClick={props.OnClickFirst}>Yes</Button>\n                <Button onClick={props.OnClickSecond}>No</Button>\n            </ModalFooter>\n        </Modal>\n        )\n\n}\n\nexport default ConfirmationModal","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport CreateCommentForm from './CreateCommentForm.jsx';\nimport Comment from './Comment.jsx';\nimport ConfirmationModal from './ConfirmationModal.jsx';\nimport { NavDropdown, Container, NavItem, Dropdown, NavLink } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { CONFLICT_CODE, LIKE, LINK, PHOTO, REFRESH_TOKEN, SUCCESS, TOKEN, UNLIKE } from '../middleware/types.js';\nimport { PROFILE } from '../middleware/routeHelpers.js';\nimport { deletePost, interactWithPostLikes } from '../middleware/BBVAPI.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fullHeart, heart } from '../middleware/IconsStore.js';\nimport moment from 'moment';\n\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            photos: null,\n            p: null,\n            videos: null,\n            v: null,\n            attachments: this.props.Attachments,\n            IsLiked: this.props.IsLiked,\n            postUpdate: false,\n            likes: this.props.Likes,\n            comments: this.props.Comments,\n            CExt: this.props.CExt,\n            coms: null,\n            isOwner: this.props.isOwner,\n            showModal: false,\n            profileURL: PROFILE + this.props.Username\n        }\n        \n        \n\n    }\n\n    componentDidMount() {\n        //console.log(this.state.CExt);\n        if (this.state.CExt != null) {\n            var comsState = this.state.CExt;\n            const coms = comsState.map(com => {\n                return <Comment key={com.Id} CommentUserId={com.CommentUserId} Body={com.Body} CreateDateTime={com.CreateDateTime} />\n            });\n\n            this.setState({ coms: coms });\n        }\n\n        if (this.props.Attachments != null) {\n            var p = [];\n            var v = [];\n\n            for (var i = 0; i < this.state.attachments.length; i++) {\n                if (this.state.attachments[i]['ContentType'] == PHOTO) {\n                    p.push(this.state.attachments[i]);\n                } else {\n                    v.push(this.state.attachments[i]);\n                }\n\n            }\n            this.setState({ photos: p, videos: v });\n\n\n            if (p != [] || v != []) {\n                const photos = p.map(attachment => {\n                    return (\n                        <img key={attachment['AttachmentID']} src={attachment[LINK]} />\n                    )\n                });\n\n                this.setState({ p: photos });\n   \n                const videos = v.map(attachment => {\n                    return (\n                        <video key={attachment['AttachmentID']} src={attachment[LINK]} control>\n                            Your browser does not support the video tag.\n                        </video>\n                        )\n                })\n                \n\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.postUpdate) {\n            this.UpdatePost();\n            this.setState({ postUpdate: false });\n        }\n\n        \n    }\n\n    openModal() {\n        //!this.state.showModal ? this.setState({ showModal: true }) : this.setState({ showModal: false });\n        this.setState({ showModal: !this.state.showModal });\n    }\n\n\n    renderDelete(isOwner) {\n        if (isOwner) {\n            return (<NavDropdown.Item onClick={() => this.openDeleteModal()}>Delete post</NavDropdown.Item>);\n        } else {\n            return \"\";\n        }\n    }\n\n\n    //Abstract to BBVAPI \n    async Like(IsLiked) {\n        var counter = this.state.likes;\n        var invertLike;\n\n        if (IsLiked == LIKE) {\n            counter++;\n            invertLike = UNLIKE;\n        } else {\n            counter--;\n            invertLike = LIKE;\n        }\n        this.setState({ likes: counter, IsLiked: invertLike });\n\n        const cookies = new Cookies();\n\n        this.setState({ btnDisabled: true });\n\n        try {\n\n            \n\n            let res = await interactWithPostLikes(cookies.get(TOKEN), this.props.PostId, IsLiked)\n\n            //Verify fetch completed successfully\n\n            if (res != null && res == SUCCESS) {\n            } else if (res && res.status == CONFLICT_CODE) {\n                var result = await JSON.parse(await res.json());\n                if (IsLiked == LIKE) {\n                    counter--;\n                    this.setState({ IsLiked: LIKE });\n                } else {\n                    counter++;\n                    this.setState({ IsLiked: UNLIKE });\n                }\n                this.setState({ likes: counter });\n            } else {\n            }\n        } catch (exception) {\n            if (IsLiked == LIKE) {\n                counter--;\n                this.setState({ IsLiked: LIKE});\n            } else {\n                counter++;\n                this.setState({ IsLiked: UNLIKE });\n            }\n            this.setState({ likes: counter });\n            //console.log(exception);\n        }\n\n\n    }\n\n     openDeleteModal() {\n         this.openModal();\n     }\n\n    async DeletePost(postId) {\n        this.openModal();\n        /*\n         * Write logic here to make post delete call.\n         * Pass token and verify on API side user is correct user via token\n         */\n\n        var cookies = new Cookies();\n\n        try {\n\n            let res = await deletePost(cookies.get(TOKEN), cookies.get(REFRESH_TOKEN), postId);\n\n            //Verify fetch completed successfully\n\n            if (res != null && res == SUCCESS) {\n                this.props.GetTL();\n            } else if (res && res.status == CONFLICT_CODE) {\n                //Handle Error\n            } else {\n                //General Error Message\n            }\n        } catch (exception) {\n            //Do something with exception\n            //console.log(exception);\n        }\n\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <img className='post_profilePic' src={this.state.profilePic} />\n                    </Col>\n                </Row>\n                <span><Link to={this.state.profileURL}><b>{this.props.Username}</b></Link></span> <span>{moment(this.props.CreateDateTime).fromNow()}</span>\n                {/*Get rid of dropdown arrow at some point (apply custom component)*/}\n                <NavDropdown title=\"...\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item>Get notified about this post</NavDropdown.Item>\n                    <NavDropdown.Item>Hide post</NavDropdown.Item>\n                    <NavDropdown.Item>Report post</NavDropdown.Item>\n                    {this.renderDelete(this.state.isOwner)}\n                </NavDropdown>\n                <ConfirmationModal Body=\"Are you sure you would like to delete this post?\" OnClickFirst={() => this.DeletePost(this.props.PostId)} OnClickSecond={() => this.openModal()} isOpen={this.state.showModal} />\n                <br />\n                {this.state.p}\n                {this.state.v}\n                <p>{this.props.Body}</p>\n                <span>{this.state.likes} Likes</span> <span>{this.props.Comments} Comments</span>\n                <br />\n                {this.state.coms}\n                <Button onClick={() => this.Like(this.state.IsLiked)}>\n        {this.state.IsLiked ? (\n          <FontAwesomeIcon icon={heart} className=\"heart-icon\" />\n        ) : (\n          <FontAwesomeIcon icon={fullHeart} className=\"heart-icon\" />\n        )}\n      </Button>\n                <CreateCommentForm PostId={this.props.PostId}/>\n            </Container>\n            )\n    }\n}\nexport default Post;","//USER ROUTES\nexport const PROFILE = '/profile/';","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input, CustomInput } from 'reactstrap';\nimport Cookies from 'universal-cookie';\nimport { CONFLICT_CODE, REFRESH_TOKEN, RESPONSE_ERRORS, TOKEN } from '../middleware/types';\nimport { DEFAULT_ERROR } from '../middleware/errors';\nimport { Row, Col } from 'react-bootstrap';\nimport { APIBASE } from '../middleware/Constants';\n\nconst CreatePostForm = (props) => {\n  const [post, setPost] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [btnDisabled, setBtnDisable] = useState(false);\n\n  async function uploadPost() {\n    const cookies = new Cookies();\n    setBtnDisable(false);\n\n    try {\n      let res = await (await fetch(APIBASE+\"Post/CreatePost\", {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization':'Bearer ' + cookies.get(TOKEN),\n          'Content-Type': 'application/json',\n          'Token': cookies.get(TOKEN),\n          'RefreshToken': cookies.get(REFRESH_TOKEN)\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify({\n          Body: post,\n          Images: photos,\n          Videos: videos\n        })\n      }));\n\n      if (res && res.ok) {\n        setPost('');\n        props.tlUpdate();\n      } else if (res && res.status == CONFLICT_CODE) {\n        var result = await JSON.parse(await res.json());\n        setErrors(result[RESPONSE_ERRORS]);\n      } else {\n        var defaultError = [{\n          DEFAULT_ERROR\n        }];\n        setErrors(DEFAULT_ERROR);\n      }\n    } catch (exception) {\n      // console.log(exception);\n    }\n  }\n\n  function addImage() {\n    // code to handle adding image\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.multiple = true;\n    input.accept = 'image/*';\n    input.onchange = (event) => {\n      const files = event.target.files;\n      const photosArray = Array.from(files);\n      setPhotos(photosArray);\n    };\n    input.click();\n  }\n\n  function addVideo() {\n    // code to handle adding video\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.multiple = true;\n    input.accept = 'video/*';\n    input.onchange = (event) => {\n      const files = event.target.files;\n      const videosArray = Array.from(files);\n      setVideos(videosArray);\n    };\n    input.click();\n  }\n\n  return (\n    <div className='create-post-container'>\n      <Row>\n        <img className='u_post_cover' src='#' alt='Cover' />\n      </Row>\n      <Row>\n        <Col>\n          <img className='u_post_profile' src={props.profile.Picture ? props.profile.Picture != \"\" : \"\"} alt='Profile' />\n        </Col>\n        <Col>\n          <Row><h3>{props.userName}</h3></Row>\n          <Row>{props.profile.Description}</Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Row>{props.profile.Followers}</Row>\n          <Row>Followers</Row>\n        </Col>\n        <Col>\n          <Row>{props.profile.Following}</Row>\n          <Row>Following</Row>\n        </Col>\n      </Row>\n      <Row>\n        <Form>\n        <FormGroup>\n        <Input type='textarea' name='post' id='post' placeholder='What are you thinking?' value={post} onChange={(e) => setPost(e.target.value)} />\n      </FormGroup>\n      <FormGroup>\n        <Button color='primary' disabled={btnDisabled} onClick={() => uploadPost()}>\n          Post\n        </Button>\n      </FormGroup>\n    </Form>\n  </Row>\n  <Row>\n    <Col>\n      <CustomInput type='file' label='Add Photos' onChange={(event) => setPhotos(Array.from(event.target.files))} multiple accept='image/*' />\n    </Col>\n    <Col>\n      <CustomInput type='file' label='Add Videos' onChange={(event) => setVideos(Array.from(event.target.files))} multiple accept='video/*' />\n    </Col>\n  </Row>\n  {errors && errors.length > 0 && (\n    <Row className='mt-2'>\n      <Col>\n        {errors.map((error, index) => (\n          <div key={index} className='alert alert-danger'>\n            {error}\n          </div>\n        ))}\n      </Col>\n    </Row>\n  )}\n</div>\n  );\n};\n\nexport default CreatePostForm;\n           \n","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport bbvapi, { getUserTimeline } from '../middleware/BBVAPI';\nimport Cookie from 'universal-cookie';\nimport Post from './Post';\nimport CreatePostForm from './CreatePostForm';\nimport { Container } from 'react-bootstrap'\nimport BBVAPI from '../middleware/BBVAPI';\nimport { REFRESH_TOKEN, RESPONSE_BODY, RESPONSE_MESSAGE, SUCCESS, TOKEN, USERNAME_KEY, USER_TOKEN } from '../middleware/types';\nimport { useSelector } from 'react-redux';\nimport { DEFAULT_ERROR } from '../middleware/errors';\n\nexport default function Timeline({ token, rtoken, userName }) {\n    const [posts, setPosts] = useState([]);\n    const [updateTimeline, setUpdateTimeline] = useState(false);\n    const [postPage, setPostPage] = useState(1);\n    const [errors, setErrors] = useState('');\n\n    const isInitialMount = useRef(true);\n\n    const GetTL = useCallback(async () => {\n        let cookie = new Cookie();\n\n        try {\n            const response = await getUserTimeline(token, rtoken, postPage);\n\n            if (response[RESPONSE_MESSAGE] !== SUCCESS) {\n                //return error to timeline\n                setErrors(response[0]['DEFAULT_ERROR'].Description);\n            } else {\n                const jsonResponse = JSON.parse(response[RESPONSE_BODY]);\n                const postList = jsonResponse.map(post => {\n                    const parsedCExt = post.CommentsExt;\n                    const isOwner = post.Username === userName;\n                   \n                    return (\n                        <Post key={post.PostId} PostId={post.PostId} Username={post.Username} CreateDateTime={post.CreateDateTime} Body={post.Body} Attachments={post.Attachments} Likes={post.Likes} IsLiked={post.LikeStatus} Comments={post.Comments} CExt={JSON.parse(post.CommentsExt)} isOwner={isOwner} GetTL={GetTL} />\n                    )\n                })\n                setPosts(postList);\n            }\n        } catch (ex) {\n            console.log(ex);\n        }\n    }, [token, rtoken, postPage, userName]);\n\n    useEffect(() => {\n        if (isInitialMount.current) {\n            GetTL();\n            isInitialMount.current = false;\n        } else {\n            const errors = document.getElementById(\"errors\");\n            if (errors) {\n              \n            }\n        }\n    }, [GetTL]);\n\n    const postList = useMemo(() => posts, [posts]);\n\n    if (postList && postList.length > 0) {\n        return (\n            <Container\n\nstyle={{ textAlign: \"left\" }}>\n<h1>{postList}</h1>\n</Container>\n);\n}\nreturn (\n<div>\n    <div>{errors}</div>\n    <p>Loading...</p>\n</div>\n);\n}","import React from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\n\nexport default function GroupView() {\n  return (\n    <div className='app_module'>\n      <Row>\n        <Col lg={9}>\n        <h3>GroupView</h3>\n        </Col>\n        <Col lg={3}>\n        <Button>\n          ...\n        </Button>\n        </Col>\n      </Row>\n\n      <div>\n        no groups available.\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport {getFriendList} from '../middleware/BBVAPI';\n\nexport default function FriendsView(props) {\n  const [friendsList, setFriendsList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await getFriendList(props.token, props.userName);\n        setFriendsList(response.payload);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [props.username]);\n\n  return (\n    <div className='app_module'>\n      <Row>\n        <Col lg={9}>\n          <h3>Friends</h3>\n        </Col>\n        <Col lg={3}>\n          <Button>...</Button>\n        </Col>\n      </Row>\n      <div>\n        {error}\n      </div>\n      {loading ? (\n        <div>Loading...</div>\n      ) : friendsList.length > 0 ? (\n        <ul>\n          {friendsList.map((friend) => (\n            <li key={friend.id}>{friend.name}</li>\n          ))}\n        </ul>\n      ) : (\n        <div>No friends available.</div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nexport default function ActivityView() {\n  return (\n    <div className='app_module'>\n      <Row>\n        <Col lg={9}>\n        <h3>Latest Activity</h3>\n        </Col>\n        <Col lg={3}>\n        <Button>\n          ...\n        </Button>\n        </Col>\n        </Row>\n      <div>\n        none available.\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Col, Row } from 'react-bootstrap'\n\nexport default function StoryView() {\n  return (\n    <div className='app_module'>\n        <Row>\n        <Col>\n            One Story\n        </Col>\n        <Col>\n            Two Story\n        </Col>\n        <Col>\n            Three Story\n        </Col>\n        </Row>\n    </div>\n  )\n}\n","import { faAnchorCircleExclamation, faL } from \"@fortawesome/free-solid-svg-icons\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BADREQUEST_CODE, CONFLICT_CODE, PAYLOAD, RESPONSE_BODY, SUCCESS_CODE, USERNAME } from \"../../middleware/types\";\nimport Cookies from 'universal-cookie';\nimport { getUserInfo } from \"../../middleware/BBVAPI\";\n\n\n\nexport const retrieveUserData = createAsyncThunk(\n    \"user/info\",\n    async (payload, {rejectWithValue}) => {\n    try {\n        const response = await getUserInfo(payload.token, payload.refreshToken);\n\n        return await response;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nconst initialState = {\n    userId: null,\n    username: null,\n    profile: null,\n    status: null,\n    onlineStatus: null,\n    organizationId: null,\n    orgName: null,\n    expPoints: null,\n    rwdPoints: null,\n    email: null,\n    level: null,\n    age: null,\n    friends: null,\n    loading: false,\n    error: null\n};\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserInfo(state, action){\n            let cookies = new Cookies();\n            //state.username = cookies.get(USERNAME);\n            //state.profileImageURL = cookies.get()\n        }\n    },\n    extraReducers: {\n        [retrieveUserData.pending]: (state, action) => {\n            state.loading = true;\n        },\n        [retrieveUserData.fulfilled]: (state, action) => {\n            state.loading = false;\n\n            switch(action.payload.responseCode){\n                case SUCCESS_CODE:\n\n                    let responseBody = JSON.parse(action.payload[PAYLOAD][RESPONSE_BODY][0]);\n\n                    state.userId = responseBody.UserID;\n                    state.username = responseBody.UserName;\n                    state.status = responseBody.Status;\n                    state.email = responseBody.Email;\n                    state.expPoints = responseBody.ExpPoints;\n                    state.member = responseBody.Member;\n                    state.organizationId = responseBody.OrganizationId;\n                    state.orgName = responseBody.OrgName;\n                    state.onlineStatus = responseBody.OnlineStatus;\n                    state.age = responseBody.Age;\n                    state.friends = responseBody.Friends;\n                    state.rwdPoints = responseBody.RwdPoints;\n                    state.profile = responseBody.Profile;\n\n                    break;\n\n                case CONFLICT_CODE:\n                    state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                    break;\n                \n                case BADREQUEST_CODE:\n                    state.error = [...action.payload[PAYLOAD].ResponseErrors];\n                    break;\n                \n                default:\n                    state.error = [...action.payload];\n                    break;\n            }\n\n        },\n        [retrieveUserData.rejected]: (state, action) => {\n            state.loading = false;\n        }\n    }\n});\n\nexport const {setUserInfo} = userSlice.actions;\n\nexport default userSlice.reducer;","import React, {useEffect, useRef} from 'react'\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Cookies from 'universal-cookie';\nimport Sidebar from '../components/Sidebar';\nimport Timeline from '../components/Timeline';\nimport AppNav from '../components/AppNav';\nimport { USER_TOKEN } from '../middleware/types';\nimport GroupView from '../components/GroupView';\nimport FriendsView from '../components/FriendsView';\nimport ActivityView from '../components/ActivityView';\nimport StoryView from '../components/StoryView';\nimport CreatePostForm from '../components/CreatePostForm';\nimport { retrieveUserData } from '../app/features/UserSlice';\nimport { logOut, logUserOut, provideAuth, provideUserRefreshToken, provideUserToken } from '../app/features/AuthSlice';\nimport { PROFILE_DEFUALT } from '../middleware/UIDefaults';\n\n\n\n/*\n                *   -AppNav\n                *   -(Col) Sidebar\n                *   - (Col) TL(Feed)\n                *   -(Col) Extra + Ads\n                */\n\n\nexport default function Home(props) {\n   const t = useSelector((state) => state.auth.token);\n   const rt = useSelector((state) => state.auth.refreshToken);\n   \n    const isInitialMount = useRef(true);\n\n    const dispatch = useDispatch();\n\n    const userName = useSelector(state => state.user.username);\n    const profile =  useSelector(state => state.user.profile);\n\n    //Retrieve UserInfo\n    useEffect(() => {\n        if(isInitialMount.current)\n        {\n            const fetchUserData = async () => {\n                const result = await dispatch(retrieveUserData({token: t, refreshToken: rt}));\n              }\n           \n              fetchUserData();\n              \n\n            isInitialMount.current = false;\n        }else {\n        if (document.getElementById(\"errors\") != null) {\n          \n        }\n    }\n    });\n\n    \n\n    return (\n        <div>\n        <Container fluid>\n            <Row>\n                <Col lg={3}>\n                    <GroupView />\n                    <FriendsView token={t} userName={userName}/>\n                </Col>\n                <Col lg={6}>\n                    <StoryView />\n                    <Timeline token={t} rtoken={rt} userName={userName}/>\n                </Col>\n                <Col lg={3}>\n                    <CreatePostForm userName={userName} profile={profile ? profile : PROFILE_DEFUALT}/>\n                     <ActivityView />\n                </Col>\n             </Row>\n            </Container>\n            </div>\n        )\n}; \n\n  ","import React from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport Input from 'reactstrap/lib/Input';\nimport Label from 'reactstrap/lib/Label';\nimport BBVAPI, { signUp } from '../middleware/BBVAPI';\nimport {DEFAULT_ERROR } from '../middleware/errors';\nimport {SUCCESS} from '../middleware/types';\nimport { Form, NavItem } from 'reactstrap/lib';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../css/Landing.css';\n\nclass SignUpForm extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            dob: new Date(),\n            phone: \"\",\n            ref: \"\",\n            errors: []\n        }\n    }\n\n    componentDidUpdate(){\n        if (document.getElementById(\"errors\") != null) {\n\n            var errorBox = \"\";\n\n            this.state.errors.forEach(\n                x => errorBox += (x)\n            )\n\n            document.getElementById(\"errors\").innerHTML = errorBox;\n        }\n    }\n    \n    setPropVal(prop, val) {\n        if(!typeof(val) == \"object\")\n        val = val.trim();\n    \n        this.setState({\n            [prop]: val\n        });\n    }\n\n   async SignUp(){\n        try {\n            let res = await(await signUp(this.state.email, this.state.username, this.state.password, this.state.ref, this.state.dob, this.state.phone));\n\n            if (res && res == SUCCESS) {\n                //redirect user to sign in portal\n                await window.location.reload();\n\n            } else if (res && typeof(res) == \"object\") {\n                //Return API error to UI\n                await this.setState({\n                    errors: await res\n                });\n                \n            } else {\n                throw \"An error occured\";\n            }\n\n        }catch(exception){\n            //return default error to user and have them try again\n\n            await this.setState({\n                errors: [DEFAULT_ERROR]\n            });\n        }\n\n    }\n\n    render(){\n        return (\n            <div>\n                <Form className='signup-form'>\n                <FormGroup>\n                        <div id=\"errors\" style={{ color: \"red\" }}>\n                        </div>\n                        <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.email ? this.state.email : ''} onChange={(val) => this.setPropVal(\"email\", val.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" value={this.state.password ? this.state.password : ''} onChange={(val) => this.setPropVal(\"password\", val.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"username\">UserName</Label>\n                    <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"UserName\" value={this.state.username ? this.state.username : ''} onChange={(val) => this.setPropVal(\"username\", val.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"dob\">DOB</Label>\n                    <DatePicker id=\"dob\" name=\"dob\" value={this.state.dob ? this.state.dob : new Date()} selected={ this.state.dob } onChange={(val) => this.setPropVal('dob', val)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"ref\">Reference Code</Label>\n                    <Input type=\"text\" name=\"ref\" id=\"ref\" placeholder=\"Reference Code\" value={this.state.ref ? this.state.ref : ''} onChange={(val) => this.setPropVal('ref', val.target.value)}/>\n                </FormGroup>\n                <div className=\"text-center\">\n  <Button onClick={() => this.SignUp()}>Sign Up</Button>\n</div>\n\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignUpForm;","import React from 'react';\nimport Loader from 'react-loader-spinner';\n//Need to import @emotion/core library\n\nconst Spinner = (props) => {\n    return (\n        <Loader\n            type=\"Circles\"\n         color=\"#00BFFF\"\n         height={100}\n         width={100}\n         timeout={3000} //3 secs\n      />\n    );\n}\n\nexport default Spinner;","import React, { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport Spinner  from '../components/Spinner';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { logIn, loginUser} from '../app/features/AuthSlice';\nimport { PAYLOAD,SUCCESS_CODE } from '../middleware/types';\nimport { DEFAULT_ERROR } from '../middleware/errors';\n\nexport default function LoginForm(props) {\n    const [email, setEmail] = useState(localStorage.getItem('rememberedEmail') || '');\n    const [password, setPassword] = useState('');\n    const [btnDisabled , toggleButton] = useState(false);\n    const [loading , toggleLoading] = useState(false);\n    const [errors, setErrors] = useState([]);\n\n    const isInitialMount = useRef(true);\n\n    const dispatch = useDispatch();\n\n    async function Login() {\n        toggleButton(true);\n        toggleLoading(true);\n        const result = await dispatch(loginUser({email: email, password: password}))\n\n        console.log(result.payload);\n\n        if(result.payload !== undefined)\n        {\n        if(result.payload.responseCode === SUCCESS_CODE)\n        {\n            props.history.push('./home');\n        }else if(result.payload.responseCode !== SUCCESS_CODE && result.payload[PAYLOAD].ResponseErrors != null){\n            setErrors(result.payload[PAYLOAD].ResponseErrors);\n            toggleLoading(false);\n            toggleButton(false);\n        }else{\n           setErrors([DEFAULT_ERROR]);\n           toggleLoading(false);\n            toggleButton(false);\n        }\n    }else {\n        setErrors([DEFAULT_ERROR]);\n        toggleLoading(false);\n         toggleButton(false);\n    }\n   }\n\n   async function checkLogin() {\n        var result =  logIn();\n\n        if(result)\n        {\n            //Send user to dashboard\n            await this.props.history.push('./home');\n        } \n   }\n\n   function renderForm() {\n    if (loading) {\n      return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Spinner />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Form>\n            <FormGroup>\n              <div id=\"errors\">\n                {errors.map((x) => x[\"Description\"]).join(\", \")}\n              </div>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </FormGroup>\n            <div className=\"form-group text-center\">\n              <FormGroup check>\n                <Label check>\n                  <Input type=\"checkbox\" /> Remember me\n                </Label>\n              </FormGroup>\n              <Button\n                className=\"btn-lg btn-primary btn-block mt-3\"\n                onClick={Login}\n                disabled={btnDisabled}\n              >\n                Log in\n              </Button>\n            </div>\n          </Form>\n        </div>\n      );\n    }\n  }\n  \n\n    useEffect(() => {\n        if(isInitialMount.current)\n        {\n            isInitialMount.current = false;\n        }else {\n            if (document.getElementById(\"errors\") != null) {\n                errors.map(\n                    x => document.getElementById(\"errors\").innerHTML = (x[\"Description\"])\n                )\n            }\n        }\n    });\n\n    return (\n        <div>\n            {renderForm()}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Container, Col, Row, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport SignUpForm from '../components/SignUpForm';\nimport LoginForm from '../components/LoginForm';\nimport '../css/Landing.css';\nimport gruuperLogo from '../assets/imgs/GruuperFull.png';\n\nconst Landing = (props) => {\n  const [showLoginForm, setShowLoginForm] = useState(true);\n  const history = useHistory();\n\n  const toggleForm = () => {\n    setShowLoginForm(!showLoginForm);\n  };\n\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <div className=\"landing-container\">\n      <Row className=\"landing-content\">\n        <Col md={6} className=\"landing-form\">\n          <div className=\"landing-form-header\">\n            <img src={gruuperLogo} alt=\"logo\" height=\"50px\" className=\"landing-logo\" />\n            <h1>{showLoginForm ? 'Welcome Back!' : 'Get Started'}</h1>\n          </div>\n          <Container>\n            {showLoginForm ? (\n              <LoginForm history={history} />\n            ) : (\n              <SignUpForm history={history} />\n            )}\n            <div className=\"landing-form-toggle\">\n              <Button variant=\"link\" onClick={toggleForm}>\n                {showLoginForm\n                  ? \"Don't have an account? Sign up now!\"\n                  : 'Already have an account? Log in here.'}\n              </Button>\n            </div>\n          </Container>\n        </Col>\n      </Row>\n      <footer className=\"landing-footer\">\n        <p>&copy; {currentYear} Gruuper. All rights reserved. Powered By Hogan Way Technologies</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Landing;\n","import { login, logout, validateRefreshToken } from './BBVAPI';\nimport Cookies from 'universal-cookie';\n\nclass Auth {\n    constructor() {\n        //Write logic to set authenticated based on refreshToken\n        this.authenticated = false;\n        this.errors = [];\n    }\n\n    async refreshAuth() {\n        var cookie = new Cookies();\n\n        if(cookie.get('token') != null && cookie.get('refreshToken') != null)\n        {\n            //Make request here to attempt login with token + refreshToken\n            //If successfull, then authenticated = true + new user cookie will be returned and set in BBVAPI\n           var response = await validateRefreshToken(cookie.get('token'), cookie.get('refreshToken'))\n                \n            if(typeof(response) == \"array\")\n                {\n                //return to homepage and pass along err message\n                //Find a way to return err messages\n                return this.authenticated;\n                } else {\n                    //Allow user to navigate to route and continue with action\n                this.authenticated = true;\n                return this.authenticated;\n                }\n        }\n\n    }\n\n    async login(e, p) {\n        this.errors = await login(e, p)\n        console.log(await this.errors);\n        if(this.errors.length == 0)\n        {\n            this.authenticated = true;\n            return this.authenticated;\n        } else {\n            return this.errors;\n        }\n    }\n\n    async logout(t) {\n        this.errors = logout(t)\n        console.log(this.errors);\n        if(this.errors != [])\n        {\n            this.authenticated = false;\n        } else {\n            return this.errors;\n        }\n    }\n\n    isAuthenticated() {\n        return this.refreshAuth();\n    }\n\n}\n\nexport default new Auth();","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from '../middleware/Auth';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={\n            props => {\n                {/* Here is where authentication check will go. If (auth) pass component else pass redirect*/ }\n                if (!Auth.isAuthenticated()) {\n                    return <Redirect exact to=\"/\"/>\n                } else {\n                    return <Component {...props} />;\n                }\n            }\n        }\n        />\n        )\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport Cookies from 'universal-cookie';\nimport { getProfile, getUserPosts } from '../middleware/BBVAPI';\nimport CreatePostForm from '../components/CreatePostForm';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Post from '../components/Post';\nimport { PROFILE_DEFUALT } from '../middleware/UIDefaults';\nimport AppNav from '../components/AppNav';\nimport '../css/Profile.css';\n\nclass Profile extends React.Component {\n  static displayName = Profile.name;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      updatetl: false,\n      updateProfile: false,\n      user: window.location.pathname.substring(9),\n      profile: null,\n      page: 1,\n    };\n  }\n\n  storeUser() {\n    try {\n      var userName = window.location.pathname.substring(9);\n    } catch (ex) {\n      let cookies = new Cookies();\n\n      userName = cookies.get('user')['UserName'];\n    }\n    console.log(userName);\n  }\n\n  profileUpdate() {\n    this.setState({ updateProfile: true });\n  }\n\n  async GetProfile() {\n    let cookie = new Cookies();\n\n    try {\n      var response = await getProfile(\n        cookie.get('token'),\n        cookie.get('refreshToken'),\n        this.state.user\n      );\n      if (await response == null) {\n        //send user to error page\n      } else {\n        //if (await response['responseMessage'] != 'Success'.toUpperCase()){\n        console.log(await response[0]);\n        //cookie.remove('token');\n        //window.location.reload();\n        //} else {\n        await this.setState({ profile: JSON.parse(response[0]) });\n        this.GetPosts();\n        //}\n      }\n    } catch (ex) {}\n  }\n\n  async GetPosts() {\n    let cookie = new Cookies();\n    try {\n      var response = await getUserPosts(\n        cookie.get('token'),\n        cookie.get('refreshToken'),\n        this.state.page,\n        this.state.user\n      );\n\n      if (typeof (await response) == typeof ('')) {\n        //return error to timeline\n      } else {\n        if (await response['responseMessage'] != 'Success'.toUpperCase()) {\n          console.log(await response['responseMessage']);\n          //cookie.remove('token');\n          //window.location.reload();\n        } else {\n          const postList = await JSON.parse(response[0]).map((post) => {\n            var parsedCExt = post.CommentsExt;\n            //console.log(parsedCExt);\n            var user = cookie.get('user');\n\n            var isOwner = false;\n            if (post.Username == user['UserName']) {\n              isOwner = true;\n            }\n\n            return (\n              <Post\n                key={post.PostId}\n                PostId={post.PostId}\n                Username={post.Username}\n                CreateDateTime={post.CreateDateTime}\n                Body={post.Body}\n                Attachments={post.Attachments}\n                Likes={post.Likes}\n                IsLiked={post.LikeStatus}\n                Comments={post.Comments}\n                CExt={JSON.parse(post.CommentsExt)}\n                isOwner={isOwner}\n                GetTL={() => this.GetTL()}\n              />\n            );\n          });\n          this.setState({ posts: postList });\n          //console.log(postList);\n        }\n      }\n    } catch (Ex) {\n      console.log(Ex);\n    }\n  }\n\n  infiniteScroll = () => {\n    // End of the document reached?\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      let newPage = this.state.page + 1;\n      this.setState({ page: newPage }, () => {\n      this.GetPosts();\n      });\n      }\n      };\n      \n      componentDidMount() {\n      this.storeUser();\n      this.GetProfile();\n      window.addEventListener('scroll', this.infiniteScroll, true);\n      }\n      \n      componentWillUnmount() {\n      window.removeEventListener('scroll', this.infiniteScroll, true);\n      }\n      \n      render() {\n      const { profile } = this.state;\n      return (\n      <div>\n      <Container>\n      <Row>\n      <Col md={8}>\n      {profile ? (\n      <div>\n      <h2>{profile.DisplayName}</h2>\n      <p>{profile.Bio || PROFILE_DEFUALT.bio}</p>\n      <Button\n      variant=\"primary\"\n      onClick={() => this.profileUpdate()}\n      >\n      Edit Profile\n      </Button>\n      <hr />\n      <CreatePostForm tlUpdate={this.profileUpdate} userName={this.state.profile.UserName} profile={this.state.profile ? this.state.profile : PROFILE_DEFUALT} />\n      <hr />\n      {this.state.posts}\n      </div>\n      ) : (\n      <p>Loading...</p>\n      )}\n      </Col>\n      </Row>\n      </Container>\n      </div>\n      );\n      }\n      }\n      \n      export default Profile;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport {getParameterByName} from '../js/browserMethods';\nimport bbvapi, { confirmUser } from '../middleware/BBVAPI';\nimport { SUCCESS, TOKEN } from '../middleware/types';\n\nclass ConfirmEmail extends React.Component{\n    static displayName = ConfirmEmail.name;\n\n    constructor(props) {\n        super(props);\n        var cookies = new Cookies();\n        this.state = {\n            id: getParameterByName('id', window.location.href),\n            confirmationToken: getParameterByName(TOKEN, window.location.href),\n            valid: false,\n            err: []\n        }\n    }\n\n    async confirmUser(){\n        if(this.state.id != null && this.state.confirmationToken != null)\n        {\n            //api call to verify\n            var result = await confirmUser(this.state.id, this.state.confirmationToken);\n\n            if(await result == SUCCESS)\n            {\n                await this.setState({valid: true});\n            } else {\n                console.log(await result);\n                const errBag = await result.map(x => {\n                    return <b key={x.Code}>{x.Description}</b>\n                });\n               \n                 this.setState({err: await errBag});                \n            }\n        }\n    }\n\n    componentDidMount(){\n        /*\n            - Verify Params\n            - If no params, display Error Message and provide link to login/sign up screen\n            - If params are here execute api call to verify user\n            - If Success provide Success Message with link to login\n        */\n        this.confirmUser();\n    }\n\n    componentDidUpdate()\n    {\n        \n    }\n\n    render(){\n        if(this.state.valid){\n        return (\n            <div>\n                <p>Your Email Has been Confirmed!</p>\n                <p>Click <Link to=\"/\">here</Link> to login!</p>\n            </div>\n        )\n        }else if(this.state.err.length > 0){\n            return (\n                <div>\n                    <p>Errors:</p>\n                    {console.log(this.state.err)}\n                    {this.state.err};\n                </div>\n            )\n        } else {\n            return(\n            <div>Loading...</div>\n            )\n        }\n    }\n}\n\nexport default ConfirmEmail;","import React from 'react';\n\nconst Message = (props) => (\n    <div style={{ background: \"#eee\", borderRadius: '5px', padding: '0 10px' }}>\n        <p><strong>{props.user}</strong> says:</p>\n        <p>{props.message}</p>\n        <p><i>{props.time}</i></p>\n    </div>\n);\n\nexport default Message;","import React from 'react';\nimport Message from './Message';\nimport '../css/GruupChat.css'; // Import the CSS file\n\nconst ChatBox = (props) => {\n  const { chatMessages } = props;\n\n  if (!chatMessages || chatMessages.length === 0) {\n    return <div className=\"chat-box\">No messages yet.</div>; // Apply the 'chat-box' class to the root div\n  }\n\n  const renderedMessages = chatMessages.map((m) => (\n    <Message\n      key={Date.now() * Math.random()}\n      user={m.user}\n      message={m.message}\n      time={m.time}\n    />\n  ));\n\n  return <div className=\"chat-box\">{renderedMessages}</div>; // Apply the 'chat-box' class to the root div\n};\n\nexport default ChatBox;\n","import React, { useState, useEffect } from 'react';\n\nconst ChatInput = (props) => {\n  const [groupId, setGroupId] = useState('');\n  const [message, setMessage] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [recipients, setRecipients] = useState([]);\n\n  useEffect(() => {\n    // Set the initial value of recipients to props.recipients when the component is loaded\n    setRecipients(props.recipients);\n  }, [props.recipients]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const isRecipientsProvided = recipients.length > 0;\n    const isMessageProvided = message !== '';\n\n    if (isRecipientsProvided && isMessageProvided) {\n      const groupMembers = recipients.slice(); // Create a copy of the recipients array\n\n      const formedMessage = {\n        Username: '',\n        Body: message,\n        GroupRecipients: recipients,\n      };\n\n      props.sendMessage('', formedMessage, groupMembers);\n      setMessage(''); // Clear the message input field\n    } else {\n      alert('Please select a recipient and enter a message.');\n    }\n  };\n\n  const onRecipientUpdate = (e) => {\n    setRecipient(e.target.value);\n  };\n\n  const onAddRecipient = () => {\n    if (recipient !== '' && !recipients.includes(recipient)) {\n      setRecipients([...recipients, recipient]); // Add the recipient to the array\n      setRecipient(''); // Clear the input field\n    }\n  };\n\n  const onRemoveRecipient = (removedRecipient) => {\n    const updatedRecipients = recipients.filter((recipient) => recipient !== removedRecipient);\n    setRecipients(updatedRecipients);\n  };\n\n  const onMessageUpdate = (e) => {\n    setMessage(e.target.value);\n  };\n\n  return (\n    <form className=\"chat-input\" onSubmit={onSubmit}>\n      <label htmlFor=\"user\">User:</label>\n      <br />\n      <input\n        id=\"user\"\n        name=\"user\"\n        value={recipient}\n        onChange={onRecipientUpdate}\n      />\n      <button type=\"button\" onClick={onAddRecipient}>Add Recipient</button>\n      <br />\n      <label htmlFor=\"message\">Message:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"message\"\n        name=\"message\"\n        value={message}\n        onChange={onMessageUpdate}\n      />\n      <br /><br />\n      <button>Submit</button>\n\n      {recipients.length > 0 && (\n        <div>\n          <h4>Recipients:</h4>\n          <ul>\n            {recipients.map((recipient) => (\n              <li key={recipient}>\n                {recipient}\n                <button type=\"button\" onClick={() => onRemoveRecipient(recipient)}>\n                  Remove\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ChatInput;\n","import React, { useState } from 'react';\n\nconst ChatInvite = (props) => {\n    const [inviteUser, setInviteUser] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const isInviteUserProvided = inviteUser && inviteUser !== '';\n\n        if (isInviteUserProvided) {\n            var groupMem = [];\n            props.inviteUser(groupMem, inviteUser);\n        } \n        else {\n            alert('Please select a recipent and a message.');\n        }\n    } \n\n    const onInviteUserChange = (e) => {\n        setInviteUser(e.target.value);\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input type=\"text\" id=\"inviteUser\" name=\"inviteUser\" onChange={onInviteUserChange}/>\n            <button>Invite</button>\n        </form>\n    )\n}\n\nexport default ChatInvite;","import React, { useState, useEffect, useRef } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport Cookies from 'universal-cookie';\nimport ChatBox from '../components/ChatBox';\nimport ChatInput from '../components/ChatInput';\nimport ChatInvite from '../components/ChatInvite';\nimport { GruupChatTypes as TYPES } from '../middleware/types';\nimport { CHATBASE as API_BASE_URL } from '../middleware/Constants';\nimport '../css/GruupChat.css';\nimport { group } from '../middleware/IconsStore';\n\nconst Chat = () => {\n  const [connection, setConnection] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [recipients, setRecipients] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [currGroup, setCurrGroup] = useState('');\n\n  const latestChatMessages = useRef([]);\n\n  const cookies = new Cookies();\n\n  const hubUrl = API_BASE_URL + 'gruupmessenger';\n\n  latestChatMessages.current = chatMessages;\n\n  useEffect(() => {\n    const newConnection = new HubConnectionBuilder()\n      .withUrl(hubUrl)\n      .withAutomaticReconnect()\n      .build();\n\n    setConnection(newConnection);\n  }, [hubUrl]);\n\n  useEffect(() => {\n    if (!connection) return;\n\n    async function startConnection() {\n      try {\n        if (connection.state === 'Disconnected') {\n          await connection.start({ withCredentials: false });\n          console.log(TYPES.CONNECTION_ESTABLISHED);\n\n          connection.on(TYPES.RECEIVE_CONNECTION_ID, (connectionId) => {\n            cookies.set(TYPES.CONNECTION_ID, connectionId);\n            const groupRequestPayload = {\n              conId: connectionId,\n              userName: '',\n              token: cookies.get('token'),\n            };\n            connection.invoke(\n              TYPES.RETRIEVE_USER_GROUPS,\n              JSON.stringify(groupRequestPayload)\n            );\n          });\n\n          connection.on(TYPES.RETRIEVE_USER_GROUPS, (groups) => {\n            groups.forEach((group) => {\n              localStorage.setItem(group.groupName, JSON.stringify(group));\n            });\n          });\n\n          connection.on(TYPES.INVITE_USER_SUCCESSFUL, (message) => {\n            console.log(message);\n          });\n\n          connection.on(TYPES.RETURN_EXCEPTION, (exception) => {\n            console.log(exception);\n          });\n\n          connection.on(TYPES.RECEIVE_MESSAGE, (message) => {\n            const updatedChatMessages = [...latestChatMessages.current];\n            updatedChatMessages.push(JSON.parse(message));\n            setChatMessages(updatedChatMessages);\n          });\n        }\n      } catch (e) {\n        console.error(TYPES.CONNECTION_FAILED, e.message);\n      }\n    }\n\n    startConnection();\n\n    return () => {\n      if (connection && connection.state !== 'Disconnected') {\n\n      } else {\n        console.log(connection);\n      }\n    };\n  }, [connection, cookies, hubUrl]);\n\n  const loadConversation = (groupId) => {\n    // Retrieve messages from localStorage for the selected conversation\n    const storedMessages = groupId;\n    const retrievedMessages = storedMessages ? storedMessages.conversation : [];\n\n\n    //need to sort the messages here by datetime\n    \n    setChatMessages(retrievedMessages);\n\n    // Update the recipients with the current conversation's participants\n    const conversation = storedMessages;\n    setRecipients(conversation.groupName.split(','));\n    setSelectedConversation(groupId);\n    setCurrGroup(conversation.groupUID);\n  };\n\n  const startNewConversation = () => {\n    // Clear the chat messages and recipients for a new conversation\n    setChatMessages([]);\n    setRecipients([]);\n  \n    // Create an empty chat group\n    const emptyGroup = {\n      groupName: '',\n      conversation: [],\n    };\n  \n    // Set the empty chat group as the selected conversation\n    setSelectedConversation(emptyGroup);\n  };\n  \n\n  const sendMessage = async (groupId, message, toUser) => {\n    console.log(currGroup);\n\n    if (!connection) return;\n    try {\n      const messagePayload = {\n        conId: cookies.get(TYPES.CONNECTION_ID),\n        token: cookies.get('token'),\n        groupId: currGroup,\n        message: message,\n      };\n      await connection.invoke(\n        TYPES.SEND_PRIVATE_MESSAGE,\n        JSON.stringify(messagePayload)\n      );\n    } catch (e) {\n      console.error(TYPES.SEND_MESSAGE_FAILED, e.message);\n    }\n  };\n\n  const inviteUser = async (groupName, userEmail) => {\n    if (!connection) return;\n\n    try {\n      const invitePayload = {\n        groupName: groupName,\n        userEmail: userEmail,\n        sender: '',\n      };\n      await connection.invoke(\n        TYPES.INVITE_USER,\n        JSON.stringify(invitePayload)\n      );\n    } catch (e) {\n      console.error(TYPES.INVITE_USER_FAILED, e.message);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3>Conversations:</h3>\n        <ul>\n          {localStorage.length > 0 &&\n            Object.entries(localStorage).map(([groupName, groupId]) => (\n              <li key={groupId}>\n                <button onClick={() => loadConversation(JSON.parse(groupId))}>\n                  {groupName}\n                </button>\n              </li>\n            ))}\n        </ul>\n        <button onClick={startNewConversation}>Start New Chat</button>\n      </div>\n      <div>\n        <ChatBox chatMessages={chatMessages} />\n        {selectedConversation && ( // Conditionally render ChatInput when selectedConversation is not null\n          <ChatInput recipients={recipients} sendMessage={sendMessage} groupUID={currGroup}/>\n        )}\n      </div>\n      <ChatInvite inviteUser={inviteUser} />\n    </div>\n  );\n};\n\nexport default Chat;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport AuthSlice from \"./features/AuthSlice\";\nimport UserSlice from \"./features/UserSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        auth: AuthSlice,\n        user: UserSlice\n    }\n})","import React from 'react';\nimport Layout from './components/Layout';\nimport Home from './pages/Home';\nimport { Route } from 'react-router';\nimport { Switch } from 'react-router-dom';\nimport './css/App.css';\nimport Landing from './pages/Landing';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Profile from './pages/Profile';\nimport ConfirmEmail from './pages/ConfirmEmail';\nimport Chat from './pages/Chat';\nimport SignUp from './pages/SignUp';\nimport { store } from './app/store';\n\nconst App = (props) => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact component={Landing} />\n        <Route path=\"/ConfirmEmail\" component={ConfirmEmail}/>\n        {/* Routes below should be authenticated routes only (involve some type of auth middleware)*/}\n        <ProtectedRoute path=\"/home\" component={Home} />\n        <ProtectedRoute path=\"/profile\" component={Profile} />\n        <ProtectedRoute path=\"/Messenger\" component={Chat} />\n        {/* Routes above should be authenticated routes only (involve some type of auth middleware)*/}\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <BrowserRouter basename={baseUrl}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}